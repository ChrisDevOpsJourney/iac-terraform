name: Terraform Reusable Workflow

on:
  workflow_call:
    inputs:
      github-runner:
        description: 'Name of GitHub hosted runner or self hosted runner'
        default: 'ubuntu-latest'
        required: false
        type: string

      terraform-hostname:
        description: 'Hostname for Terraform cloud/enterprise'
        default: 'app.terraform.io'
        required: false
        type: string

      working-directory:
        description: 'Relative path starting with "." that Terraform will execute within (e.g. "./terraform")'
        default: './terraform'
        required: false
        type: string

      environments-directory:
        description: 'Path to environments directory (e.g. "./terraform/environments")'
        default: './terraform/environments'
        required: false
        type: string

      modules-directory:
        description: 'Path to terraform modules directory (e.g. "./terraform/modules")'
        default: './terraform/modules'
        required: false
        type: string

      concurrency-group:
        description: 'Group name for concurrency control'
        default: ${{ github.event.pull_request.head.ref_name || github.ref_name }}
        required: false
        type: string

    secrets:
      # @see https://app.terraform.io/app/settings/tokens
      TF_API_TOKEN:
        required: true
      # @see https://developer.hashicorp.com/terraform/cloud-docs/users-teams-organizations/organizations#creating-organizations
      TF_ORGANIZATION:
        required: true

# Ensures that only one workflow runs at a time
concurrency: ${{ github.ref }}-${{ github.workflow }}

defaults:
  run:
    shell: bash

permissions:
  contents: write
  pull-requests: write

jobs:
  # Check if the code in the terraform working directory is formatted correctly and create a pull request if not
  fmt:
    runs-on: ${{ inputs.github-runner }}
    outputs:
      status: ${{ steps.fmt.outputs.status || 'false' }}
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2

      - name: Terraform format
        id: fmt
        working-directory: ${{ inputs.working-directory }}
        run: |
          terraform fmt -diff -recursive
          if [[ ! -z $(git status -s) ]]; then
            echo "status=true" >> $GITHUB_OUTPUT
          fi

      - name: Remove terraform/fmt/(branch) if exists (to avoid conflicts)
        if: ${{ steps.fmt.outputs.status == 'true' }}
        run: |
          branch_name="terraform/fmt/${{ github.event.pull_request.head.ref_name || github.ref_name }}"
          if [[ ! -z $(git ls-remote --exit-code --heads origin $branch_name) ]]; then
            git push origin --delete $branch_name
          fi

      - name: Create pull request
        if: ${{ steps.fmt.outputs.status == 'true' }}
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.PAT }}
          branch: terraform/fmt/${{ github.event.pull_request.head.ref_name || github.ref_name }}
          labels: terraform-fmt, ${{ github.event.pull_request.head.ref_name || github.ref_name }}
          title: Terraform fmt
          body: |
            Terraform fmt was launched and corrected the formatting in this pull request:
            ```
            ${{ steps.fmt.outputs.stdout }}
            ```
